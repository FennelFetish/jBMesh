// jbmesh-tools

plugins {
    id 'application'
}


tasks.withType(JavaCompile) { // compile-time options:
    options.compilerArgs << '-Xdiags:verbose'
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) { // runtime options:
    args = []
    classpath sourceSets.main.runtimeClasspath
    //debug true
    enableAssertions true
    //jvmArgs '-verbose:gc'
    //jvmArgs '-Xbatch'
    jvmArgs '-Xms512m', '-Xmx4069m'
    jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=10'
    
    // JITWatch
    //jvmArgs '-XX:+UnlockDiagnosticVMOptions', '-XX:+TraceClassLoading', '-XX:+LogCompilation'
    //jvmArgs '-XX:+PrintAssembly', '-XX:+DebugNonSafepoints'
    //jvmArgs '-XX:LogFile=skeleton-editor.log'
}


mainClassName = 'ch.alchemists.jbmesh.tools.Main'
if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}
jar.manifest.attributes('Main-Class': mainClassName)


dependencies {
    compile project(":jbmesh-lib")

    implementation 'org.jmonkeyengine:jme3-core:'    + jmonkeyengineVersion
    implementation 'org.jmonkeyengine:jme3-desktop:' + jmonkeyengineVersion
    implementation 'org.jmonkeyengine:jme3-plugins:' + jmonkeyengineVersion
    
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:'     + jmonkeyengineVersion
}
